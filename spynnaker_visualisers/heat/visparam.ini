//visparam.txt
// Simulation Information:
simparams = "HEATMAP48";

// options are (update this list if you add a new one!):  
//   HEATMAP4, HEATMAP48, HEATMAP3x48

// they then refer to the matching param section below
//
// a template may be found at the base of this file
 

//============================================================================
// 48 chip (1 board heat-demo)
//
HEATMAP48 = 
{
  TITLE = "Heat Diffusion- Live SpiNNaker 48-Chip Plot";   // What to plot across the top of the plot
};


//============================================================================
// 4 chip (1 board heat-demo)
//
HEATMAP4 = 
{
  TITLE = "Heat Diffusion- Live SpiNNaker 4-Chip Plot";   // What to plot across the top of the plot
  XDIMENSIONS = 8;		// In a 2D plot, the total number of elements in the X direction
  EACHCHIPX = 4;		//   how many of these each chip in the x dimension contributes
  YDIMENSIONS = 8;		// In a 2D plot, the total number of elements in the X direction
  EACHCHIPY = 4;		//   how many of these each chip in the y dimension contributes
};


//============================================================================
// 3x48 chip torus (3 board heat-demo)
//
HEATMAP3x48 = 
{
  TITLE = "Heat Diffusion - Live SpiNNaker Torus Plot";   // What to plot across the top of the plot
  XDIMENSIONS = 48;		// In a 2D plot, the total number of elements in the X direction
  EACHCHIPX = 4;		//   how many of these each chip in the x dimension contributes
  YDIMENSIONS = 48;		// In a 2D plot, the total number of elements in the X direction
  EACHCHIPY = 4;		//   how many of these each chip in the y dimension contributes
};

//============================================================================
//
// The below template has all fields which can be set using the visparam.ini file
// you can use this to start a new template as required.
// The values are set to the defaults, if this is what you want you can leave out!
// 
//============================================================================

//============================================================================
// this is the visualiser template for xxxxxxxx
//
TEMPLATE = 
{
  TITLE = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";   // What to plot across the top of the plot

  XDIMENSIONS = 32;		// In a 2D plot, the total number of elements in the X direction
  EACHCHIPX = 4;		//   how many of these each chip in the x dimension contributes
  YDIMENSIONS = 32;		// In a 2D plot, the total number of elements in the X direction
  EACHCHIPY = 4;		//   how many of these each chip in the y dimension contributes
//  XCHIPS=x;           // Uncomment if overriding the chipwise autocalculation (XDIMENSIONS/EACHCHIPX)
//  YCHIPS=y;           // Uncomment if overriding the chipwise autocalculation (YDIMENSIONS/EACHCHIPY) 
                        // XCHIPS and YCHIPS are explicitly used when the output is not chip-based, but e.g. population based

  TIMEWINDOW = 3.5;		// for plots that are over time (e.g. raster plot, or worm/line plot) - default X.Y seconds of display.
  HISTORYSIZE = 3500;	// how many previous sets/rows of data to keep (2x1280 screens worth)
  MAXRASTERISEDNEURONS = 1024;	// max number of neurons that we'll be plotting in a population raster plot

  WINBORDER = 110;		// output graphics window sizes - this is the grey border around the plot area, set to <100 for no titles/labels/key etc.
  WINHEIGHT = 700;		// overall height
  WINWIDTH = 850;       // overall width (excluding key)
  KEYWIDTH = 50;        // the extra border size on the RHS to give space for the key (disregarded if displaykey is commented)

  HIWATER = 10.0;		// for fixed scaling: the maximum, for dynamic scaling: the Starting HiWater value.
  LOWATER = 0.0;		// for fixed scaling: the minimum, for dynamic scaling: the starting LoWater value. 

  MAXFRAMERATE = 25;	// how fast you want to refresh the graphics (max rate - frames per second)

  SDPPORT = 17894;		// UDP port number used for SDP

  FIXEDPOINT = 16;		// number of bits in word of data that are to the right of the decimal place

  BITSOFPOPID = 0;		// number of bits of population in each core (pow of 2 pls); -0 for implicit core==popID

  ALTERSTEPSIZE = 1.0;	// the step size used when altering the interactive data to send
};
